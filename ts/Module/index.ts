// Модульная архитектура - это подход к организации кода, при котором приложение разбивается на отдельные модули.

// Модуль - это файл, который экспортирует какие-то данные, которые могут быть использованы в других файлах.

// (ТАК ДЕЛАТЬ НЕ НАДО!!!) Есть Namespaces и reference - это устаревшие способы организации кода.
namespace A {
    export const a = 1;

    export interface B {
        c: number
    }
}
// namespace - можно еще назвать "module"
module B {
    export const a = 1;

    export interface B {
        c: number
    }
}

//reference - index2.ts

// А теперь нормально =====================================================================================================================

export const c = 1

// если сборка фронта идет в один файл, то нужно использовать сборщики модулей, например webpack

// import и export - это способы организации кода, которые появились в ES6
// можно экспортировать классы, функции, переменные, интерфейсы, типы и т.д.
// есть export default - через него нельзя экспортировать интерфейсы и типы, так же нельзя сделать несколько...
// export default в одном файле

// синтаксис export
// import * as all from './index.js' // экспорт всего модуля
// import defaultExport from './index.js' // экспорт default
// import { c } from './index.js' // экспорт конкретного элемента
// import { c as d } from './index.js' // экспорт с переименованием
// import defaultExport, { c } from './index.js' // экспорт default и конкретного элемента
// import { type MyType } from './index.js' // экспорт типа