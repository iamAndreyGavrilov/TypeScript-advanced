"use strict";
// Что такое Utility Types?
//
//     Utility Types - это встроенные типы в TypeScript, которые позволяют модифицировать и расширять существующие типы.
//     Они доступны глобально и могут использоваться в любом модуле.
//
//     Какие бывают Utility Types?
//
//     В TypeScript существует множество Utility Types, но наиболее часто используются следующие:
//
//     Record<Keys, Type>: создает тип, который является записью с ключами, определенными в первом параметре, и значениями типа, определенного во втором параметре.
//     Pick<T, Keys>: создает тип, содержащий только указанные свойства объекта типа T.
//     Omit<T, Keys>: создает тип, содержащий все свойства объекта типа T, кроме указанных.
//     Partial<T>: делает все свойства объекта типа T необязательными.
//     Required<T>: делает все свойства объекта типа T обязательными.
//     Readonly<T>: делает все свойства объекта типа T доступными только для чтения.
//     Exclude<T, Type>: создает тип, содержащий все свойства объекта типа T, кроме свойств типа Type.
//     Extract<T, Type>: создает тип, содержащий только свойства объекта типа T, соответствующие типу Type.
//     NonNullable<T>: делает тип T необязательным.
