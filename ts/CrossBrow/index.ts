// Кроссбраузерность -
// 1) Совместимость с браузерами:
// Полифилы и транспиляция:

//     Используйте полифилы для добавления поддержки современных функций в старых браузерах.
//     Используйте транспиляторы, такие как Babel, для конвертации современного JavaScript-кода в код,
//     совместимый со старыми браузерами.

//     Онлайн инструменты проверки:
//     Используйте онлайн-инструменты, такие как Can I Use, чтобы проверить поддержку различных веб-технологий
//     в различных браузерах.

// Например, если вы хотите использовать метод Array.prototype.includes (который был добавлен в ECMAScript 2016)
// в старых версиях браузера, который этого метода не поддерживает, вы можете использовать полифил для этого метода.
// Полифил для Array.prototype.includes будет проверять, существует ли метод includes, и если нет, добавит
// реализацию этого метода к прототипу массива.

//     Вот пример простого полифила для метода Array.prototype.includes:

// if (!Array.prototype.includes) {
//     Array.prototype.includes = function(valueToFind, fromIndex) {
//         return this.indexOf(valueToFind, fromIndex) !== -1;
//     };
// }

// Этот код проверяет, поддерживает ли браузер метод includes, и если нет, добавляет собственную реализацию этого метода.

// 2) Инструменты автоматического тестирования:
//
//     Используйте инструменты, такие как BrowserStack, Sauce Labs или LambdaTest для автоматического
//     тестирования вашего сайта в различных браузерных и ОС-конфигурациях.
//     Используйте инструменты для автоматического тестирования, такие как Selenium или Puppeteer,
//     для написания и выполнения тестов в различных браузерных средах.

// Стили:
// Кроссбраузерные стили включают в себя создание CSS-кода, который обеспечивает консистентное отображение элементов
// на различных браузерах и платформах. Это может включать в себя использование
// * - вендорных префиксов,
// * - CSS-фреймворков и
// инструментов автоматизации, таких как
// * - автопрефиксер, для генерации кроссбраузерного CSS.

// вендорных префиксов -
/* Префиксы для свойства transition */
// -webkit-transition: all 4s ease-in-out;
// -moz-transition: all 4s ease-in-out;
// -ms-transition: all 4s ease-in-out;
// -o-transition: all 4s ease-in-out;
// transition: all 4s ease-in-out;

// Автопрефиксер:
//     Инструменты, такие как Autoprefixer, автоматически добавляют вендорные префиксы к вашему CSS,
//     основываясь на данных из Can I Use.//
//     Пример использования Autoprefixer с PostCSS:
//
// postcss([ require('autoprefixer') ])